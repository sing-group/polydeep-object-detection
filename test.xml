<?xml version="1.0" encoding="UTF-8"?>

<pipeline xmlns="http://www.sing-group.org/compi/pipeline-1.0"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <version>0.1.1</version>
    <params>
        <param name="ttv_dir" shortName="ttvd" defaultValue="/experiment/ttv">
            Path where the splitted dataset is stored.
        </param>
        <param name="results_dir" shortName="rd" defaultValue="/experiment/results">
            Path where the results will be stored.
        </param>
        <param name="dataset_dir" shortName="dd" defaultValue="/datasets">
            Path where the dataset is stored.
        </param>
        <param name="dataset_name" shortName="dn">
            Name of the dataset will be processed.
        </param>
        <param name="model_name" shortName="mn" defaultValue="yolo3_darknet53_voc">
            Name of the CNN model. It must be a valid GluonCV model.
        </param>
        <param name="neuronal_network" shortName="nn">
            Params file with the network parameters (CNN weights).
        </param>
        <param name="threshold_cnn" shortName="tc">
            Neural network bounding box score threshold.
        </param>
        <param name="num_gpus" shortName="gpu" defaultValue="0">
            Number of GPUs to use. 0 for CPU.
        </param>
        <param name="gpu_id" shortName="gi" defaultValue="0">
            GPU identifier for sanity check.
        </param>
    </params>
    <tasks>
        <task id="check-dataset" params="dataset_dir dataset_name">
            <![CDATA[
                if [ ! -d "${dataset_dir}/${dataset_name}" ]; then
                    echo "Missing dataset ${dataset_name}. Please, use the download-dataset.sh script to download it.";
                    exit 1;
                fi;
            ]]>
        </task>
        <task id="check-neuronal-network" after="check-dataset" params="results_dir neuronal_network">
            <![CDATA[
                if [ ! -f "$results_dir/${neuronal_network}" ]; then
                    echo "Missing neuronal network $results_dir/${neuronal_network}.";
                    exit 1;
                fi;
            ]]>
        </task>
        <task id="check-gpu" after="check-neuronal-network" params="gpu_id">
            scripts/sanity_check.sh $gpu_id
        </task>
        <task id="test" after="check-gpu"
              params="model_name neuronal_network threshold_cnn num_gpus results_dir ttv_dir dataset_dir dataset_name"
              src="scripts/test.py" interpreter="python3.5  -u -c &quot;${task_code}&quot; ">
        </task>
    </tasks>
</pipeline>
